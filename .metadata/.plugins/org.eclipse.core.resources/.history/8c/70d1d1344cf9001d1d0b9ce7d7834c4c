package com.paymentgateway.phonepe;

import java.io.UnsupportedEncodingException;
import java.util.Base64;

public class TestNewPayment {

//	const crypto = require('crypto');
//	const request = require('request');


	String PHONEPE_SALTKEY = "537735a0-d4f2-4761-af5b-887320cb73ab";
	String PHONEPE_MID = "POKERDADDYUAT";
	String SERVER_URL = "https://pokerapi.pokerdaddy.in";
	String PHONEPE_CALLBACK_URL = SERVER_URL + "/pokerApi/v1/purchase/payments/phonepe/return";
	String PURCHASE_REDIRECT_URL = SERVER_URL + "/ngaccount/web/add-money/payment-complete/";
	String PHONEPE_REQUEST_URL = "https://api-preprod.phonepe.com/apis/merchant-simulator/pg/v1/pay";
	
	public static void main(String args[]) {
		try {
			TestNewPayment tnp=new TestNewPayment() ;
			tnp.paymentPhonpe();
		}catch(Exception e) {
			e.printStackTrace();
		}
	}
	public boolean paymentPhonpe() {
		String purchaseId = "1006";
		String userId = "629388";
		int txnAmount = 116;
		txnAmount = txnAmount*100;


		

		try {
			
			String phonepe_payload_card_initiate = "{"+
				    "\"merchantId\":\"" +PHONEPE_MID+"\","+
				    "\"merchantTransactionId\":"+ purchaseId+","+
				    "\"merchantUserId\":\""+ userId+"\","+
				    "\"amount\":"+ txnAmount+","+
				    "\"redirectUrl\":\""+ PURCHASE_REDIRECT_URL + purchaseId+"\","+
				    "\"redirectMode\": \"POST\","+
				    "\"callbackUrl\":\""+ PHONEPE_CALLBACK_URL+"\","+
				    "\"paymentInstrument\": {"+
				    "\"type\":\"PAY_PAGE\""+
				    "}"+
				"}";
			
			
			
			System.out.println("Request is ====="+phonepe_payload_card_initiate);
			
			
			//String encoded = Buffer.from(phonepe_payload_card_initiate, "utf8").toString("base64");
					
			
			
		}catch(Exception e) {
			e.printStackTrace();
		}
		return true;
	}
	public static String base64Decode(String str) {
	    try {
	        return new String(base64Decode(str.getBytes(Constants.UTF_8)), Constants.UTF_8);
	    } catch (UnsupportedEncodingException e) {
	         e.printStackTrace();
	    }
	}
	public static String descodificarDeBase64(String stringCondificado){
	    try {
	        return new String(Base64.decode(stringCondificado.getBytes("UTF-8"),Base64.DEFAULT));
	    } catch (UnsupportedEncodingException e) {
	        e.printStackTrace();
	        return "";
	    }
	}
}
