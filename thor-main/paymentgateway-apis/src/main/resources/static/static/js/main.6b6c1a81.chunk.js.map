{"version":3,"sources":["global.js","components/wrapper/Wrapper.js","components/heading/Heading.js","js/scripts.js","components/access/otpPinLogin.js","components/access/Captcha.js","components/access/Login.js","components/access/singUp.js","components/access/Access.js","index.js"],"names":["window","basePath","process","Wrapper","children","className","Heading","props","customClass","icon","title","isNumberKey","evt","elementValue","target","value","test","replace","OtpPinLogin","state","onClick","e","openField","keyHandler","event","_that","_keyCode","which","keyCode","nextElementSibling","focus","previousElementSibling","handleChange","setState","name","htmlFor","this","label","type","autoFocus","maxLength","onKeyUp","onChange","pin1","pin2","pin3","pin4","pin5","pin6","visible","id","otp","changeHandler","Component","Captcha","relName","captchaValue","onInput","captchaHandler","src","alt","Login","verifyNumber","length","fetch","headers","then","response","json","responseJson","error","catch","console","_active","submitWithCaptcha","document","querySelector","mobileNumber","captcha","mobileNumberDiv","otpButtonDiv","otpPinDivEnable","otpPinDivElement","tabHandler","SignUp","Access","action","activeComponent","componentsToRender","map","key","SpecificComponent","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6b6c1a81.chunk.js","sourcesContent":["window.basePath = process.env.PUBLIC_URL;\n","import \"./wrapper.css\";\r\n\r\n\r\nfunction Wrapper({children}){\r\n    return (\r\n        <div className=\"lp-wrapper\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wrapper;","\r\nfunction Heading(props){\r\n    return(\r\n        <div className={props.customClass}>\r\n            <div className=\"heading_with_icon mb-30\">\r\n                { props.icon && <span className=\"heading_icon_box\"><i className=\"fa fa-bar-chart-o\" aria-hidden=\"true\"></i></span> }\r\n                <h2 className=\"heading_text lpay_button-primary\">{props.title}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Heading;\r\n\r\n","export function isNumberKey(evt) {\r\n\tlet elementValue = evt.target.value;\r\n\r\n\tif (!(/^[0-9]+$/.test(elementValue))) {\r\n\t\tevt.target.value = elementValue.replace(/[^0-9]/g, \"\");\r\n\t}\r\n}","import React, { Component } from \"react\";\r\n\r\nclass OtpPinLogin extends Component{\r\n\r\n    \r\n    state = {\r\n        'otp' : <div className=\"d-flex justify-content-between mb-20\" onClick={e => { this.props.openField(e, 'pin') }}><span>00:50</span><span>Login with PIN</span></div>,\r\n        'pin' : <div className=\"d-flex justify-content-between mb-20\" onClick={e => { this.props.openField(e, 'otp') }}><span>Forget PIN</span><span>Login wit OTP</span></div>,\r\n        'pin1' : '',\r\n        'pin2' : '',\r\n        'pin3' : '',\r\n        'pin4' : '',\r\n        'pin5' : '',\r\n        'pin6' : '',\r\n    }\r\n\r\n    keyHandler = (event, _that) => {\r\n        var _keyCode = event.which || event.keyCode;\r\n        if(_keyCode > 47 && _keyCode < 58){\r\n\r\n            if(event.target.nextElementSibling){\r\n                if(event.target.value != ''){\r\n                    event.target.nextElementSibling.focus();\r\n                }\r\n            }\r\n        }else{\r\n            event.target.value = '';\r\n        }\r\n        if(_keyCode == 8){\r\n            if(event.target.previousElementSibling){\r\n                event.target.previousElementSibling.focus();\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    handleChange = (evt) => {\r\n        this.setState({\r\n            [evt.target.name] : evt.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div className=\"col-md-12 mb-20 optPinLogin\">\r\n                <div className=\"lpay_input_group\">\r\n                    <label htmlFor=\"\">{this.props.label}</label>\r\n                    <div className=\"lpay_input_group_pin\">\r\n                        <input \r\n                        type=\"text\" \r\n                        autoFocus \r\n                        maxLength=\"1\" \r\n                        onKeyUp={this.keyHandler} \r\n                        onChange={this.handleChange} \r\n                        className=\"lpay_input\"\r\n                        name='pin1'\r\n                        value={this.state.pin1} />\r\n                        \r\n                        <input type=\"text\" name='pin2' value={this.state.pin2} onKeyUp={this.keyHandler} onChange={this.handleChange}  maxLength=\"1\" className=\"lpay_input mb-2\" />\r\n                        <input type=\"text\" name='pin3' value={this.state.pin3} onKeyUp={this.keyHandler} onChange={this.handleChange}  maxLength=\"1\" className=\"lpay_input mb-2\" />\r\n                        <input type=\"text\" name='pin4' value={this.state.pin4} onKeyUp={this.keyHandler} onChange={this.handleChange} maxLength=\"1\" className=\"lpay_input mb-2\" />\r\n                        <input type=\"text\" name='pin5' value={this.state.pin5} onKeyUp={this.keyHandler} onChange={this.handleChange} maxLength=\"1\" className=\"lpay_input mb-2\" />\r\n                        <input type=\"text\" name='pin6' value={this.state.pin6} onKeyUp={this.keyHandler} onChange={this.handleChange} maxLength=\"1\" className=\"lpay_input mb-2\" />\r\n                    </div>\r\n                    { this.state[this.props.visible] }\r\n                    <input type=\"hidden\" name=\"otp\" id={this.props.otp} onChange={e => this.props.changeHandler(e)} value={this.state.pin1 + this.state.pin2 + this.state.pin3 + this.state.pin4 + this.state.pin5 + this.state.pin6} />\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default OtpPinLogin;","import React, { Component } from 'react';\r\nimport './captcha.css';\r\n\r\nclass Captcha extends Component{\r\n\r\n    render(){\r\n        return(\r\n        <div className=\"col-md-12 mb-20\">\r\n            <div className=\"lpay_input_group captcha_div\">\r\n                <input type=\"text\" name={this.props.relName}  value={this.props.captchaValue} onChange={e => this.props.changeHandler(e)}  onInput={e => this.props.captchaHandler(e)} maxLength=\"4\" className=\"lpay_input\" />\r\n                <img src={`${window.basePath}/img/captcha.jpg`} alt=\"\" />\r\n            </div>\r\n        </div>  \r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Captcha;","\r\nimport React, { Component } from \"react\";\r\nimport Wrapper from \"../wrapper/Wrapper\";\r\nimport Heading from \"../heading/Heading\";\r\nimport {isNumberKey} from '../../js/scripts';\r\nimport OtpPinLogin from \"./otpPinLogin\";\r\nimport Captcha from './Captcha';\r\n\r\nclass Login extends Component{\r\n\r\n    constructor(){\r\n\r\n        super();\r\n        this.state = {\r\n            mobileNumberDiv : true,\r\n            otpButtonDiv : false,\r\n            otpPinDivEnable : false,\r\n            otpPinDivElement: \"\",\r\n            otp: '',\r\n            mobileNumber : '',\r\n            captcha: '',\r\n            error: ''\r\n        }\r\n        \r\n    }\r\n\r\n    verifyNumber = (event) => {\r\n\r\n        var _otp = event.target.value;\r\n        if(_otp.length === 10){\r\n            fetch(window.basePath + '/json/numberVerify.json', {\r\n                headers : {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                }\r\n            })\r\n            .then((response) => response.json())\r\n            .then((responseJson) => {\r\n                this.setState(responseJson);\r\n                if(this.state.error != ''){\r\n                    this.setState({ 'otpButtonDiv': false })\r\n                }else{\r\n                    this.setState({ 'otpButtonDiv': true })\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(error);\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    openField = (event, _active) => {\r\n\r\n        this.setState({ 'otpButtonDiv': false,'otpPinDivEnable': true,'otpPinDivElement' : _active })\r\n\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n        this.setState({'error': ''});\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    submitWithCaptcha = (event) => {\r\n\r\n        var _value = event.target.value;\r\n        if(_value.length == 4){\r\n            this.setState({\r\n                'otp' : document.querySelector(\"#otpId\").value,\r\n                'mobileNumber' : this.state.mobileNumber,\r\n                'captcha' : this.state.captcha\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    render(){\r\n\r\n\r\n        \r\n        return (\r\n            <>\r\n                <Wrapper>\r\n                   <Heading title=\"Login Form\" customClass=\"col-md-12 lp-heading\" />\r\n                   <div className=\"login_wrapper\">\r\n                       { this.state.mobileNumberDiv && \r\n\r\n                       <div className=\"col-md-12 mb-20\">\r\n                            <div className=\"lpay_input_group\">\r\n                                <label htmlFor=\"\">Mobile Number</label>\r\n                                <input type=\"text\" id=\"mobileNumber\" name=\"mobileNumber\" maxLength=\"10\" data-var='mobileNumber' onChange={this.changeHandler} onInput={isNumberKey, this.verifyNumber}  className=\"lpay_input\" />\r\n                                { <span className='error-msg'>{this.state.error}</span> }\r\n                            </div>\r\n                       </div>\r\n\r\n                       }\r\n                       { this.state.otpButtonDiv &&\r\n\r\n                            <div className=\"login-action-btn mb-20 text-center\">\r\n                                <button className=\"lpay_button lpay_button-md lpay_button-primary taget-div\" onClick={(e) => {this.openField(e, 'pin')}} data-target=\"login-pin\">Login with PIN</button>\r\n                                <button className=\"lpay_button lpay_button-md lpay_button-secondary taget-div\" onClick={(e) => {this.openField(e, 'otp')}} id=\"loginOtp\" data-target=\"login-otp\">Login with OTP</button>\r\n                            </div>\r\n\r\n                        }\r\n                        { this.state.otpPinDivEnable &&\r\n\r\n                            <OtpPinLogin label={this.state.otpPinDivElement} otp=\"otpId\" changeHandler={this.changeHandler}  openField={this.openField} visible={this.state.otpPinDivElement} />\r\n\r\n                        }\r\n                        { this.state.otpPinDivElement &&\r\n\r\n                            <Captcha captchaHandler={this.submitWithCaptcha} captchaValue={this.state.value} relName=\"captcha\" changeHandler={this.changeHandler} />\r\n\r\n                        }\r\n                   </div>\r\n                   \r\n                    <p className=\"tabchange_text\">Want to create account ? <button onClick={e => { this.props.tabHandler(e, \"register\"); }}>Register now</button></p>\r\n                </Wrapper>\r\n           </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Heading from '../heading/Heading';\r\nimport Wrapper from \"../wrapper/Wrapper\";\r\nimport {isNumberKey} from '../../js/scripts';\r\n\r\nclass SignUp extends Component{\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <Wrapper>\r\n                    <Heading title=\"Create Account\" customClass=\"col-md-12\" />\r\n                    <div className=\"login_wrapper\">\r\n                        <div className=\"col-md-12 mb-20\">\r\n                            <div className=\"lpay_input_group\">\r\n                                <label htmlFor=\"\">Mobile Number</label>\r\n                                <input type=\"text\" onInput={isNumberKey} className=\"lpay_input\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"login-action-btn\">\r\n                            <button className=\"lpay_button lpay_button-md lpay_button-primary taget-div\" data-target=\"login-pin\">Login with PIN</button>\r\n                            <button className=\"lpay_button lpay_button-md lpay_button-secondary taget-div\" id=\"loginOtp\" data-target=\"login-otp\">Login with OTP</button>\r\n\t\t\t\t\t    </div>\r\n                    </div>\r\n                <p className=\"tabchange_text\">Already have account ? <button onClick={e => { this.props.tabHandler(e, \"login\"); }}>Login now</button></p>\r\n                </Wrapper>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SignUp","import React, { Component } from 'react'; \r\nimport Login from './Login';\r\nimport SignUp from './singUp';\r\nimport \"./access.css\";\r\n\r\n\r\n\r\nclass Access extends Component {\r\n\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            activeComponent : \"login\"\r\n        }\r\n\r\n    }\r\n\r\n    tabHandler = (e, action) => {\r\n        this.setState({activeComponent: action});\r\n    }\r\n\r\n    render() {\r\n        let componentArr = [\r\n            {\r\n                \"component\" : Login,\r\n                \"label\" : \"login\"\r\n            },\r\n            {\r\n                \"component\" : SignUp,\r\n                \"label\" : \"register\"\r\n            }\r\n        ];\r\n        \r\n        const componentsToRender = componentArr.map(key => {\r\n            if(key.label === this.state.activeComponent) {                                    \r\n                let SpecificComponent = key.component;\r\n                return <SpecificComponent tabHandler={this.tabHandler} key={key.label} />\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div className=\"lp-access_wrapper\">\r\n                <div className=\"lp-logo\">\r\n                    <img src={`${window.basePath}/img/white-logo.png`} alt=\"/\" />\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"lp-access_box\">\r\n                            <span className=\"lp-shape\"></span>\r\n                            { componentsToRender }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <img src={`${window.basePath}/img/bg-5.jpg`} className=\"lp-access_bg\" /> \r\n            </div>\r\n        )\r\n    \r\n    }\r\n\r\n}\r\n\r\nexport default Access;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import Practice from './components/practice/Practice';\nimport Access from './components/access/Access';\nimport \"./global\";\n\n// import Login from './components/login/authanticate';\n\n\n\nReactDOM.render(<Access />, document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}